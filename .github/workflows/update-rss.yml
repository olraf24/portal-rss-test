// Ulepszona funkcja z bardziej agresywnym promptem
async function enhanceDescriptionWithGroq(title, originalDescription) {
  const prompt = `ZADANIE: Przepisz całkowicie od nowa ten opis artykułu informacyjnego.

WYMAGANIA:
- Maksymalnie 100 znaków
- Użyj innych słów niż w oryginale
- Zachowaj główne fakty
- Stwórz nagłówkowy styl (jak tytuł w gazecie)
- Dodaj emocjonalny wydźwięk
- BEZ cudzysłowów i bez "napisał"

ARTYKUŁ:
Tytuł: ${title}
Opis: ${originalDescription}

NOWY OPIS (maksymalnie 100 znaków):`;

  const requestData = JSON.stringify({
    messages: [
      {
        role: "system",
        content: "Jesteś ekspertem od pisania chwytliwych nagłówków i opisów prasowych. Zawsze przepisujesz tekst całkowicie innymi słowami."
      },
      {
        role: "user",
        content: prompt
      }
    ],
    model: "llama-3.1-70b-versatile",
    temperature: 0.8,  // Zwiększona kreatywność
    max_tokens: 100,   // Krótsze odpowiedzi
    top_p: 0.9
  });

  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'api.groq.com',
      path: '/openai/v1/chat/completions',
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${GROQ_API_KEY}`,
        'Content-Type': 'application/json',
        'Content-Length': Buffer.byteLength(requestData)
      },
      timeout: 15000
    };

    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        try {
          if (res.statusCode !== 200) {
            console.log(`Groq API error ${res.statusCode}:`, data);
            resolve(originalDescription);
            return;
          }
          
          const response = JSON.parse(data);
          let enhancedText = response.choices[0].message.content.trim();
          
          // Usuń ewentualne cudzysłowy na początku/końcu
          enhancedText = enhancedText.replace(/^["']|["']$/g, '');
          
          // Sprawdź czy tekst się różni od oryginału
          const similarity = calculateSimilarity(originalDescription, enhancedText);
          if (similarity > 0.8) {
            console.log(`Tekst zbyt podobny (${Math.round(similarity * 100)}%), wymuszam zmianę...`);
            
            // Drugi prompt z wymuszeniem zmiany
            const forcePrompt = `Przepisz to KOMPLETNIE INNYMI SŁOWAMI (max 80 znaków): ${originalDescription}`;
            // Tu można dodać recursive call z forcePrompt
            resolve(enhancedText); // Na razie zwracamy co mamy
          } else {
            console.log(`Enhanced (${Math.round(similarity * 100)}% podobieństwo): ${enhancedText}`);
            resolve(enhancedText);
          }
          
        } catch (error) {
          console.log('JSON parse error:', error);
          resolve(originalDescription);
        }
      });
    });

    req.on('error', (error) => {
      console.log('Groq request error:', error);
      resolve(originalDescription);
    });

    req.on('timeout', () => {
      console.log('Groq request timeout');
      req.destroy();
      resolve(originalDescription);
    });

    req.setTimeout(15000);
    req.write(requestData);
    req.end();
  });
}

// Funkcja do obliczania podobieństwa tekstów (prosta wersja)
function calculateSimilarity(text1, text2) {
  const words1 = text1.toLowerCase().split(/\s+/);
  const words2 = text2.toLowerCase().split(/\s+/);
  
  const set1 = new Set(words1);
  const set2 = new Set(words2);
  
  const intersection = new Set([...set1].filter(x => set2.has(x)));
  const union = new Set([...set1, ...set2]);
  
  return intersection.size / union.size; // Jaccard similarity
}

// Alternatywnie - funkcja z różnymi stylami
async function enhanceWithRandomStyle(title, originalDescription) {
  const styles = [
    {
      name: "dramatyczny",
      prompt: `Przepisz to dramatycznie jak breaking news (max 80 znaków): ${originalDescription}`
    },
    {
      name: "faktyczny",
      prompt: `Napisz tylko najważniejsze fakty bez opinii (max 80 znaków): ${originalDescription}`
    },
    {
      name: "nagłówkowy", 
      prompt: `Stwórz chwytliwy nagłówek prasowy (max 80 znaków): ${originalDescription}`
    },
    {
      name: "skrócony",
      prompt: `Skróć do 3 najważniejszych słów kluczowych: ${originalDescription}`
    }
  ];
  
  const randomStyle = styles[Math.floor(Math.random() * styles.length)];
  console.log(`Używam stylu: ${randomStyle.name}`);
  
  // Tu wykonujesz request z randomStyle.prompt
  // ...
}
